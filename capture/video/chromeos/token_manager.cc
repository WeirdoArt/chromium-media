// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#include "media/capture/video/chromeos/token_manager.h"

namespace media {

TokenManager::TokenManager() = default;
TokenManager::~TokenManager() = default;

base::UnguessableToken TokenManager::GetTokenForTrustedClient(
    cros::mojom::CameraClientType type) {
  // pluginvm's token should be generated by vm_permission_service.
  CHECK_NE(type, cros::mojom::CameraClientType::PLUGINVM);
  auto& token = client_token_map_[type];
  if (token.is_empty()) {
    token = base::UnguessableToken::Create();
  }
  return token;
}

bool TokenManager::AuthenticateClient(cros::mojom::CameraClientType type,
                                      const base::UnguessableToken& token) {
  // TODO(b/170075468): Check other clients after they have been migrated to
  // CameraHalDispatcher::RegisterClientWithToken.
  if (type != cros::mojom::CameraClientType::CHROME) {
    return true;
  }
  auto it = client_token_map_.find(type);
  return it != client_token_map_.end() && it->second == token;
}

}  // namespace media
